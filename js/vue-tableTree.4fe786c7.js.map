{"version":3,"sources":["webpack:///./src/views/vue-tableTree.vue?c006","webpack:///./src/views/vue-tableTree.vue","webpack:///src/views/vue-tableTree.vue","webpack:///./src/views/vue-tableTree.vue?00a3","webpack:///./src/views/vue-tableTree.vue?fbe2"],"names":["render","_vm","this","_c","_self","staticClass","ref","staticStyle","attrs","tableData","defaultExpandedRows","children","hasChildren","tableRowClassName","on","handleCurrentChange","scopedSlots","_u","key","fn","row","class","length","_v","_s","label","staticRenderFns","name","data","id","code","time","currentRow","created","console","mounted","methods","localStorage","restoreSelectedNode","findNodeById","expandParentNodes","findParentNode","component"],"mappings":"+GAAA,W,2CCAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,WAAW,CAACG,IAAI,YAAYC,YAAY,CAAC,MAAQ,QAAQC,MAAM,CAAC,KAAOP,EAAIQ,UAAU,UAAU,KAAK,OAAS,GAAG,wBAAwBR,EAAIS,oBAAoB,aAAa,CAAEC,SAAU,WAAYC,YAAa,eAAgB,wBAAwB,GAAG,iBAAiBX,EAAIY,mBAAmBC,GAAG,CAAC,iBAAiBb,EAAIc,sBAAsB,CAACZ,EAAG,kBAAkB,CAACK,MAAM,CAAC,KAAO,QAAQ,MAAQ,KAAK,MAAQ,OAAOQ,YAAYf,EAAIgB,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,UAAS,IAAEC,IAAO,MAAO,CAACjB,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACF,EAAG,IAAI,CAACkB,MAAM,CAC9nB,iBACAD,EAAIT,UAAYS,EAAIT,SAASW,OACzB,iBACA,2BACFnB,EAAG,OAAO,CAACE,YAAY,cAAc,CAACJ,EAAIsB,GAAGtB,EAAIuB,GAAGJ,EAAIK,mBAAmBtB,EAAG,kBAAkB,CAACK,MAAM,CAAC,KAAO,OAAO,MAAQ,KAAK,MAAQ,SAASL,EAAG,kBAAkB,CAACK,MAAM,CAAC,KAAO,OAAO,MAAQ,SAAS,IAAI,IAEhOkB,EAAkB,GC8BP,GACfC,2BACAC,OACA,OACAnB,WACA,CACAoB,KACAJ,aACAK,YACAC,kBACApB,UACA,CACAkB,KACAJ,cACAK,eACAC,kBACApB,UACA,CACAkB,KACAJ,gBACAK,kBACAC,mBAEA,CACAF,MACAJ,gBACAK,kBACAC,uBAMA,CACAF,KACAJ,aACAK,YACAC,kBACApB,UACA,CACAkB,KACAJ,cACAK,eACAC,mBAEA,CACAF,KACAJ,cACAK,eACAC,kBACApB,UACA,CACAkB,MACAJ,gBACAK,kBACAC,uBAMA,CACAF,KACAJ,aACAK,YACAC,oBAGAC,gBACAtB,yBAGAuB,UAEA,0BACA,gDACAC,mEAGAC,UACA,4BAEAC,SAEArB,uBACA,kBACA,EAEAsB,2DAEAA,+CAKAxB,uBAAAO,IACA,kDACA,cAEA,IAIAkB,sBACA,mDACA,GAEA,oBACA,sDACA,IACA,sCACA,kBAEA,8BAOAC,kBACA,kBACA,qBACA,kCACA,wCACA,eAGA,aAIAC,qBACA,iDACA,IACA,8CACA,4BAKAC,2BACA,kBACA,qBACA,kCACA,4CACA,eAGA,eC1LuV,I,wBCQnVC,EAAY,eACd,EACA1C,EACA0B,GACA,EACA,KACA,WACA,MAIa,aAAAgB,E","file":"js/vue-tableTree.4fe786c7.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./vue-tableTree.vue?vue&type=style&index=0&id=b9bdef86&prod&scoped=true&lang=css&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tree-table-container\"},[_c('el-table',{ref:\"treeTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"row-key\":\"id\",\"border\":\"\",\"default-expanded-keys\":_vm.defaultExpandedRows,\"tree-props\":{ children: 'children', hasChildren: 'hasChildren' },\"highlight-current-row\":\"\",\"row-class-name\":_vm.tableRowClassName},on:{\"current-change\":_vm.handleCurrentChange}},[_c('el-table-column',{attrs:{\"prop\":\"label\",\"label\":\"名称\",\"width\":\"220\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [_c('span',{staticClass:\"custom-tree-node\"},[_c('i',{class:[\n              'tree-node-icon',\n              row.children && row.children.length\n                ? 'el-icon-folder'\n                : 'el-icon-folder-opened',\n            ]}),_c('span',{staticClass:\"node-label\"},[_vm._v(_vm._s(row.label))])])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"code\",\"label\":\"编码\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"time\",\"label\":\"时间\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Eltable+Eltree实现数据展示 -->\r\n<template>\r\n  <div class=\"tree-table-container\">\r\n    <el-table\r\n      ref=\"treeTable\"\r\n      :data=\"tableData\"\r\n      style=\"width: 100%\"\r\n      row-key=\"id\"\r\n      border\r\n      :default-expanded-keys=\"defaultExpandedRows\"\r\n      :tree-props=\"{ children: 'children', hasChildren: 'hasChildren' }\"\r\n      highlight-current-row\r\n      @current-change=\"handleCurrentChange\"\r\n      :row-class-name=\"tableRowClassName\"\r\n    >\r\n      <el-table-column prop=\"label\" label=\"名称\" width=\"220\">\r\n        <template slot-scope=\"{ row }\">\r\n          <span class=\"custom-tree-node\">\r\n            <i\r\n              :class=\"[\r\n                'tree-node-icon',\r\n                row.children && row.children.length\r\n                  ? 'el-icon-folder'\r\n                  : 'el-icon-folder-opened',\r\n              ]\"\r\n            ></i>\r\n            <span class=\"node-label\">{{ row.label }}</span>\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"code\" label=\"编码\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"time\" label=\"时间\"></el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PersistentTreeTable\",\r\n  data() {\r\n    return {\r\n      tableData: [\r\n        {\r\n          id: 1,\r\n          label: \"一级目录\",\r\n          code: \"A001\",\r\n          time: \"2023-01-01\",\r\n          children: [\r\n            {\r\n              id: 4,\r\n              label: \"一级目录1\",\r\n              code: \"A001-01\",\r\n              time: \"2023-01-02\",\r\n              children: [\r\n                {\r\n                  id: 9,\r\n                  label: \"一级目录1-1\",\r\n                  code: \"A001-01-01\",\r\n                  time: \"2023-01-03\",\r\n                },\r\n                {\r\n                  id: 10,\r\n                  label: \"一级目录1-2\",\r\n                  code: \"A001-01-02\",\r\n                  time: \"2023-01-04\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          label: \"二级目录\",\r\n          code: \"A002\",\r\n          time: \"2023-02-01\",\r\n          children: [\r\n            {\r\n              id: 5,\r\n              label: \"二级目录1\",\r\n              code: \"A002-01\",\r\n              time: \"2023-02-02\",\r\n            },\r\n            {\r\n              id: 6,\r\n              label: \"二级目录2\",\r\n              code: \"A002-02\",\r\n              time: \"2023-02-03\",\r\n              children: [\r\n                {\r\n                  id: 11,\r\n                  label: \"二级目录2-1\",\r\n                  code: \"A002-02-01\",\r\n                  time: \"2023-02-04\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 3,\r\n          label: \"三级文件\",\r\n          code: \"A003\",\r\n          time: \"2023-03-01\",\r\n        },\r\n      ],\r\n      currentRow: null,\r\n      defaultExpandedRows: [], // 默认展开的行\r\n    };\r\n  },\r\n  created() {\r\n    // 初始化时设置第一个节点为默认展开\r\n    if (this.tableData.length > 0) {\r\n      this.defaultExpandedRows = [this.tableData[0].id];\r\n      console.log(this.defaultExpandedRows, \"this.defaultExpandedRows\");\r\n    }\r\n  },\r\n  mounted() {\r\n    this.restoreSelectedNode();\r\n  },\r\n  methods: {\r\n    // 处理行选中事件\r\n    handleCurrentChange(val) {\r\n      this.currentRow = val;\r\n      if (val) {\r\n        // 保存选中节点ID到localStorage\r\n        localStorage.setItem(\"selectedTreeNodeId\", val.id.toString());\r\n      } else {\r\n        localStorage.removeItem(\"selectedTreeNodeId\");\r\n      }\r\n    },\r\n\r\n    // 设置行样式\r\n    tableRowClassName({ row }) {\r\n      if (this.currentRow && row.id === this.currentRow.id) {\r\n        return \"current-row\";\r\n      }\r\n      return \"\";\r\n    },\r\n\r\n    // 恢复选中的节点\r\n    restoreSelectedNode() {\r\n      const savedId = localStorage.getItem(\"selectedTreeNodeId\");\r\n      if (savedId) {\r\n        // 延迟执行确保表格渲染完成\r\n        this.$nextTick(() => {\r\n          const node = this.findNodeById(this.tableData, parseInt(savedId));\r\n          if (node) {\r\n            this.$refs.treeTable.setCurrentRow(node);\r\n            this.currentRow = node;\r\n            // 确保选中节点的所有父节点都是展开的\r\n            this.expandParentNodes(node);\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    // 递归查找节点\r\n    findNodeById(nodes, id) {\r\n      for (const node of nodes) {\r\n        if (node.id === id) return node;\r\n        if (node.children && node.children.length) {\r\n          const found = this.findNodeById(node.children, id);\r\n          if (found) return found;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    // 展开所有父节点\r\n    expandParentNodes(node) {\r\n      const parent = this.findParentNode(this.tableData, node.id);\r\n      if (parent) {\r\n        this.$refs.treeTable.toggleRowExpansion(parent, true);\r\n        this.expandParentNodes(parent);\r\n      }\r\n    },\r\n\r\n    // 查找父节点\r\n    findParentNode(nodes, childId, parent = null) {\r\n      for (const node of nodes) {\r\n        if (node.id === childId) return parent;\r\n        if (node.children && node.children.length) {\r\n          const found = this.findParentNode(node.children, childId, node);\r\n          if (found) return found;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tree-table-container {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 高亮当前行样式 */\r\n.el-table .current-row {\r\n  background-color: blue !important;\r\n}\r\n\r\n/* 树形节点样式 */\r\n.custom-tree-node {\r\n  /* display: flex; */\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.tree-node-icon {\r\n  margin-right: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\n.tree-node-icon.el-icon-folder {\r\n  color: #f0ad4e; /* 文件夹图标颜色 */\r\n}\r\n\r\n.tree-node-icon.el-icon-document {\r\n  color: #67c23a; /* 文件图标颜色 */\r\n}\r\n\r\n.node-label {\r\n  flex: 1;\r\n}\r\n\r\n/* 自定义树形箭头样式 */\r\n.el-table__expand-icon {\r\n  color: #000 !important; /* 黑色实心箭头 */\r\n  font-weight: bold;\r\n  position: relative;\r\n}\r\n\r\n.el-table__expand-icon .el-icon-arrow-right:before {\r\n  content: \"\\e6df\"; /* 使用实心箭头图标 */\r\n  font-size: 16px;\r\n}\r\n\r\n.el-table__expand-icon--expanded .el-icon-arrow-right:before {\r\n  content: \"\\e6e0\"; /* 展开状态的实心箭头图标 */\r\n}\r\n\r\n/* 调整树形缩进 */\r\n.el-table .el-table__indent {\r\n  padding-left: 0;\r\n}\r\n\r\n.el-table .el-table__row .el-table__expand-icon {\r\n  margin-right: 0;\r\n}\r\n\r\n/* 鼠标悬停样式 */\r\n.el-table--enable-row-hover .el-table__body tr:hover > td {\r\n  background-color: #f5f7fa !important;\r\n}\r\n\r\n/* 表头样式 */\r\n.el-table__header th {\r\n  background-color: #f5f7fa;\r\n  color: #333;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./vue-tableTree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./vue-tableTree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./vue-tableTree.vue?vue&type=template&id=b9bdef86&scoped=true&\"\nimport script from \"./vue-tableTree.vue?vue&type=script&lang=js&\"\nexport * from \"./vue-tableTree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./vue-tableTree.vue?vue&type=style&index=0&id=b9bdef86&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b9bdef86\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}